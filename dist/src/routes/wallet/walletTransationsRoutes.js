"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const walletTransactionsController_1 = require("../../controllers/wallet/walletTransactionsController");
const walletBalanceController_1 = require("../../controllers/wallet/walletBalanceController");
const billingHistoryController_1 = require("../../controllers/wallet/billingHistoryController");
const authMiddleware_1 = require("../../middlewares/authMiddleware");
const refundController_1 = require("../../controllers/refund/refundController");
const router = (0, express_1.Router)();
router.post("/transaction", authMiddleware_1.verifyDeviceToken, walletTransactionsController_1.walletRecharges);
router.get("/transaction/:userId", authMiddleware_1.verifyDeviceToken, walletTransactionsController_1.getTransactionsByUserId);
router.get("/transactions", authMiddleware_1.verifyDeviceToken, walletTransactionsController_1.getAllTransactions);
router.get("/balance/:userId", authMiddleware_1.verifyDeviceToken, walletBalanceController_1.getWalletBalance);
router.get("/balance", authMiddleware_1.verifyDeviceToken, walletBalanceController_1.getWalletBalanceWithOutUserId);
router.get("/billing_history/:userId", authMiddleware_1.verifyDeviceToken, billingHistoryController_1.fetchOrderBillingHistoryForMobile);
router.get("/billing_history/:userId", authMiddleware_1.verifyDeviceToken, billingHistoryController_1.fetchOrderBillingHistory);
router.post("/deduct", authMiddleware_1.verifyDeviceToken, walletTransactionsController_1.deductWalletBalance);
router.get("/logs/:userId", authMiddleware_1.verifyDeviceToken, walletBalanceController_1.getWalletLogs);
router.post("/refund", authMiddleware_1.verifyDeviceToken, refundController_1.processRefund);
exports.default = router;
